/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 15.0 		*/
/*  Created On : 28-nov.-2023 10:08:51 a. m. 				*/
/*  DBMS       : PostgreSQL 						*/
/* ---------------------------------------------------- */

/* Drop Tables */

DROP TABLE IF EXISTS Afiliado_Beneficiario CASCADE
;

DROP TABLE IF EXISTS Agenda CASCADE
;

DROP TABLE IF EXISTS Categoria CASCADE
;

DROP TABLE IF EXISTS Cita CASCADE
;

DROP TABLE IF EXISTS Consultorio CASCADE
;

DROP TABLE IF EXISTS Especialidad CASCADE
;

DROP TABLE IF EXISTS Especialidad_Medico_Consultorio CASCADE
;

DROP TABLE IF EXISTS Medico CASCADE
;

DROP TABLE IF EXISTS Pago CASCADE
;

DROP TABLE IF EXISTS Registro CASCADE
;

DROP TABLE IF EXISTS Sede CASCADE
;

DROP TABLE IF EXISTS Tipo_de_cita CASCADE
;

DROP TABLE IF EXISTS Usuario CASCADE
;

/* Create Tables */

CREATE TABLE Afiliado_Beneficiario
(
	k_tipodocumento varchar(20) NOT NULL,
	k_numerodocumento integer NOT NULL,	-- identificador unico para Usuario
	n_tipoafiliacion varchar(12) NOT NULL,	-- nombre del tipo de afiliacion del afiliado/beneficiario
	n_estado varchar(15) NOT NULL,	-- Estado del beneficiario (Activo, Inactivo, En mora)
	k_tipodocumentoafiliado varchar(20) NULL,
	k_numerodocumentoafiliado integer NULL,
	k_categoria smallint NOT NULL
)
;

CREATE TABLE Agenda
(
	k_tipodocumento varchar(20) NOT NULL,
	k_numerodocumento integer NOT NULL,
	k_agenda integer NOT NULL,	-- Identificador único para Agenda
	q_mes smallint NOT NULL,	-- Mes en curso de la agenda
	q_ano smallint NOT NULL
)
;

CREATE TABLE Categoria
(
	k_categoria smallint NOT NULL,	-- Identificador único para Categoría
	i_nombre char(1) NOT NULL,	-- Nombre que recibe la Categoría
	q_precio numeric NOT NULL,	-- Precio asignado para la Categoría
	q_multa numeric NOT NULL	-- Precio a pagar por multa
)
;

CREATE TABLE Cita
(
	k_idcita integer NOT NULL,	-- identificador único para Cita
	k_tipodecita smallint NOT NULL,
	h_inicial time(4) NOT NULL,	-- Hora inicial de la cita
	h_final time(4) NOT NULL,	-- Hora final (calculada a partir del tipo) de la cita
	f_cita date NOT NULL,	-- Dia mes y año de la cita
	n_estado varchar(13) NOT NULL,	-- Estado de la cita.
	k_pacienteTipoDocumento varchar(20) NOT NULL,
	k_pacienteNumeroDocumento integer NOT NULL,
	k_agenda integer NOT NULL,
	k_medicoTipoDocumento varchar(20) NOT NULL,
	k_medicoNumeroDocumento integer NOT NULL
)
;

CREATE TABLE Consultorio
(
	k_consultorio integer NOT NULL,	-- Identificador único para Consultorio (Es el número de consultorio)
	k_sede smallint NOT NULL	-- Identificador unico para Sede
)
;
INSERT INTO Consultorio (k_consultorio, k_sede)
VALUES 
(101, 1),
(102, 1), 
(101, 2),
(102, 2), 
(101, 3),
(102, 3),
(101, 4),
(102, 4),
(101, 5),
(102, 5);  


CREATE TABLE Especialidad
(
	k_especialidad smallint NOT NULL,	-- Identificador único para Especialidad
	n_nombre varchar(20) NOT NULL	-- Nombre que recibe la especialidad
)
;
INSERT INTO Especialidad (k_especialidad, n_nombre)
VALUES 
(1, 'Cardiologia'),
(2, 'Neurologia'),
(3, 'Pediatria'),
(4, 'Dermatologia'),
(5, 'Gastroenterologia'),
(6, 'Oftalmologia'),
(7, 'Oncologia'),
(8, 'Psiquiatria'),
(9, 'Traumatologia'),
(10, 'Endocrinologia');


CREATE TABLE Especialidad_Medico_Consultorio
(
	k_especialidad integer NOT NULL,	-- Identificador único para Especialidad
	k_tipodocumento varchar(20) NOT NULL,
	k_numerodocumento integer NOT NULL,	-- Identificador único para Médico
	k_consultorio integer NOT NULL,
	k_sede smallint NOT NULL,
	i_horario varchar(6) NOT NULL
)
;

CREATE TABLE Medico
(
	k_tipodocumento varchar(20) NOT NULL,
	k_numerodocumento integer NOT NULL,	-- Identificador único para Usuario.
	n_registroMedico varchar(20) NOT NULL
)
;

CREATE TABLE Pago
(
	k_idcita integer NOT NULL,	-- Identificador único para Cita
	k_pago integer NOT NULL,	-- Identificador debil para Pago
	n_estado varchar(20) NOT NULL,	-- Estado del pago (Cancelado, en mora, etc)
	f_pago timestamp(6) NOT NULL,	-- Fecha en la que se realizo el pago HH:MM DD/MM/AA
	f_limitepago timestamp NOT NULL	-- Fecha máxima permitida para pagar
)
;

CREATE TABLE Registro
(
	k_idcita integer NOT NULL,	-- Identificador único para Cita
	k_registro integer NOT NULL,	-- Identificador debil para Registro
	n_diagnostico varchar(200) NOT NULL,	-- Se registra acá lo concluido por el médico
	n_prescripcion varchar(50) NOT NULL	-- Se le receta medicamentos al paciente
)
;

CREATE TABLE Sede
(
	k_sede smallint NOT NULL,	-- Identificador único para Sede
	n_nombre varchar(30) NOT NULL,	-- Nombre de la sede
	q_telefono integer NOT NULL,	-- Teléfono de contacto a la sede
	n_direccion varchar(50) NOT NULL	-- Dirección donde esta ubicada la sede
)
;
INSERT INTO Sede (k_sede, n_nombre, q_telefono, n_direccion)
VALUES 
(1, 'Sede Central', 31245678, 'Calle 45 #12-34'),
(2, 'Sede Norte', 31098765, 'Avenida 19 #120-45'),
(3, 'Sede Sur', 31654321, 'Carrera 10 #98-76'),
(4, 'Sede Oriente', 31456789, 'Calle 72 #15-88'),
(5, 'Sede Occidente', 31876543, 'Avenida 68 #80-12');

CREATE TABLE Tipo_de_cita
(
	k_tipodecita smallint NOT NULL,
	n_nombre varchar(50) NOT NULL,
	q_duracion smallint NOT NULL
)
;

CREATE TABLE Usuario
(
	k_tipodocumento varchar(20) NOT NULL,
	k_numerodocumento integer NOT NULL,	-- Identificador único para Usuario
	n_nombre varchar(50) NOT NULL,	-- Nombre del Usuario
	i_sexo char(1) NOT NULL,	-- Sexo del usuario
	f_nacimiento date NOT NULL,	-- Fecha de nacimiento del Usuario
	q_telefonocontacto integer NULL,	-- Telefono de contacto de Usuario
	q_telefonocelular integer NOT NULL,	-- Telefono celular de Usuario
	n_correoElectronico varchar(50) NOT NULL	-- Correo electrónico de Usuario
)
;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE Afiliado_Beneficiario ADD CONSTRAINT PK_AFILIADO_BENEFICIARIO
	PRIMARY KEY (k_numerodocumento,k_tipodocumento)
;

ALTER TABLE Afiliado_Beneficiario ADD CONSTRAINT CK_n_tipoafiliacion CHECK (n_tipoafiliacion in ('Afiliado', 'Beneficiario'))
;

CREATE INDEX IXFK_Afiliado_Beneficiario_Afiliado_Beneficiario ON Afiliado_Beneficiario (k_tipodocumentoafiliado ASC,k_numerodocumentoafiliado ASC)
;

CREATE INDEX IXFK_Afiliado_Beneficiario_Categoria ON Afiliado_Beneficiario (k_categoria ASC)
;

ALTER TABLE Agenda ADD CONSTRAINT PK_AGENDA
	PRIMARY KEY (k_agenda,k_tipodocumento,k_numerodocumento)
;

ALTER TABLE Agenda ADD CONSTRAINT CK_k_agenda CHECK (k_agenda > 0)
;

ALTER TABLE Agenda ADD CONSTRAINT CK_q_mes CHECK (q_mes >= 1 and q_mes <= 12)
;

CREATE INDEX IXFK_AGENDA_MEDICO ON Agenda (k_numerodocumento ASC)
;

ALTER TABLE Categoria ADD CONSTRAINT PK_CATEGORIA
	PRIMARY KEY (k_categoria)
;

ALTER TABLE Categoria 
  ADD CONSTRAINT UK_i_nombre UNIQUE (i_nombre)
;

ALTER TABLE Categoria ADD CONSTRAINT CK_k_categoria CHECK (k_categoria > 0 and k_categoria < 999999999)
;

ALTER TABLE Categoria ADD CONSTRAINT CK_q_precio CHECK (q_precio > 0)
;

ALTER TABLE Categoria ADD CONSTRAINT CK_i_nombre CHECK (i_nombre in ('A','B','C'))
;

ALTER TABLE Categoria ADD CONSTRAINT CK_q_multa CHECK (q_multa > 0)
;

ALTER TABLE Cita ADD CONSTRAINT PK_CITA
	PRIMARY KEY (k_idcita)
;

ALTER TABLE Cita ADD CONSTRAINT CK_k_idcita CHECK (k_idcita > 0)
;

ALTER TABLE Cita ADD CONSTRAINT CK_n_estado CHECK (n_estado in ('Disponible','No Disponible'))
;

CREATE INDEX IXFK_Cita_Afiliado_Beneficiario ON Cita (k_pacienteNumeroDocumento ASC,k_pacienteTipoDocumento ASC)
;

CREATE INDEX IXFK_Cita_Agenda ON Cita (k_agenda ASC,k_medicoTipoDocumento ASC,k_medicoNumeroDocumento ASC)
;

CREATE INDEX IXFK_Cita_Tipo_de_cita ON Cita (k_tipodecita ASC)
;

ALTER TABLE Consultorio ADD CONSTRAINT PK_CONSULTORIO
	PRIMARY KEY (k_consultorio,k_sede)
;

ALTER TABLE Consultorio ADD CONSTRAINT CK_k_consultorio CHECK (k_consultorio > 0)
;

CREATE INDEX IXFK_CONSULTORIO_SEDE ON Consultorio (k_sede ASC)
;

ALTER TABLE Especialidad ADD CONSTRAINT PK_ESPECIALIDAD
	PRIMARY KEY (k_especialidad)
;

ALTER TABLE Especialidad 
  ADD CONSTRAINT UK_n_nombre UNIQUE (n_nombre)
;

ALTER TABLE Especialidad ADD CONSTRAINT CK_k_especialidad CHECK (k_especialidad > 0)
;

ALTER TABLE Especialidad_Medico_Consultorio ADD CONSTRAINT PK_ESPECIALIDAD_MEDICO
	PRIMARY KEY (k_especialidad,k_numerodocumento,k_tipodocumento,k_consultorio,k_sede,i_horario)
;

ALTER TABLE Especialidad_Medico_Consultorio ADD CONSTRAINT CK_i_horario CHECK (i_horario in ('Mañana','Tarde'))
;

CREATE INDEX IXFK_Especialidad_Medico_Consultorio_Consultorio ON Especialidad_Medico_Consultorio (k_consultorio ASC,k_sede ASC)
;

CREATE INDEX IXFK_Especialidad_Medico_Consultorio_Especialidad ON Especialidad_Medico_Consultorio (k_especialidad ASC)
;

CREATE INDEX IXFK_Especialidad_Medico_Consultorio_Medico ON Especialidad_Medico_Consultorio (k_tipodocumento ASC,k_numerodocumento ASC)
;

ALTER TABLE Medico ADD CONSTRAINT PK_MEDICO
	PRIMARY KEY (k_numerodocumento,k_tipodocumento)
;

ALTER TABLE Medico 
  ADD CONSTRAINT UK_n_registroMedico UNIQUE (n_registroMedico)
;

CREATE INDEX IXFK_Medico_Usuario ON Medico (k_tipodocumento ASC,k_numerodocumento ASC)
;

ALTER TABLE Pago ADD CONSTRAINT PK_PAGO
	PRIMARY KEY (k_pago)
;

ALTER TABLE Pago ADD CONSTRAINT CK_k_pago CHECK (k_pago > 0)
;

CREATE INDEX IXFK_PAGO_CITA ON Pago (k_idcita ASC)
;

ALTER TABLE Registro ADD CONSTRAINT PK_REGISTRO
	PRIMARY KEY (k_idcita,k_registro)
;

ALTER TABLE Registro ADD CONSTRAINT CK_k_registro CHECK (k_registro > 0)
;

CREATE INDEX IXFK_REGISTRO_CITA ON Registro (k_idcita ASC)
;

ALTER TABLE Sede ADD CONSTRAINT PK_SEDE
	PRIMARY KEY (k_sede)
;

ALTER TABLE Sede 
  ADD CONSTRAINT UK_n_direccion UNIQUE (n_direccion)
;

ALTER TABLE Sede 
  ADD CONSTRAINT UK_n_nombre_sede UNIQUE (n_nombre)
;

ALTER TABLE Sede 
  ADD CONSTRAINT UK_q_telefono UNIQUE (q_telefono)
;

ALTER TABLE Sede ADD CONSTRAINT CK_k_sede CHECK (k_sede > 0)
;

ALTER TABLE Sede ADD CONSTRAINT CK_q_telefono CHECK (q_telefono > 0)
;

ALTER TABLE Tipo_de_cita ADD CONSTRAINT PK_Tipo_de_cita
	PRIMARY KEY (k_tipodecita)
;

ALTER TABLE Tipo_de_cita 
  ADD CONSTRAINT UK_n_nombre_tipo UNIQUE (n_nombre)
;

ALTER TABLE Tipo_de_cita ADD CONSTRAINT CK_n_nombre CHECK (n_nombre in ('Proriotaria','Primera vez','Control','Lectura exámenes'))
;

ALTER TABLE Tipo_de_cita ADD CONSTRAINT CK_q_duracion CHECK (q_duracion > 0)
;

ALTER TABLE Tipo_de_cita ADD CONSTRAINT CK_k_tipodecita CHECK (k_tipodecita > 0)
;

ALTER TABLE Usuario ADD CONSTRAINT PK_USUARIO
	PRIMARY KEY (k_tipodocumento,k_numerodocumento)
;

ALTER TABLE Usuario ADD CONSTRAINT CK_k_numerodocumento CHECK (k_numerodocumento > 0 )
;

ALTER TABLE Usuario ADD CONSTRAINT CK_q_telefonocontacto CHECK (q_telefonocontacto > 0)
;

ALTER TABLE Usuario ADD CONSTRAINT CK_q_telefonocelular CHECK (q_telefonocelular > 0)
;

ALTER TABLE Usuario ADD CONSTRAINT CK_i_sexo CHECK (i_sexo in ('M' , 'F'))
;

ALTER TABLE Usuario ADD CONSTRAINT CK_k_tipodocumento CHECK (k_tipodocumento in ('RC','TI','CC','CE'))
;

/* Create Foreign Key Constraints */

ALTER TABLE Afiliado_Beneficiario ADD CONSTRAINT FK_Afiliado_Beneficiario_Afiliado_Beneficiario
	FOREIGN KEY (k_tipodocumentoafiliado,k_numerodocumentoafiliado) REFERENCES Afiliado_Beneficiario (k_tipodocumento,k_numerodocumento) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Afiliado_Beneficiario ADD CONSTRAINT FK_Afiliado_Beneficiario_Usuario
	FOREIGN KEY (k_tipodocumento,k_numerodocumento) REFERENCES Usuario (k_tipodocumento,k_numerodocumento) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Agenda ADD CONSTRAINT FK_Agenda_Medico
	FOREIGN KEY (k_tipodocumento,k_numerodocumento) REFERENCES Medico (k_tipodocumento,k_numerodocumento) ON DELETE No Action ON UPDATE No Action
;


ALTER TABLE Cita ADD CONSTRAINT FK_Cita_Afiliado_Beneficiario
	FOREIGN KEY (k_pacienteTipoDocumento,k_pacienteNumeroDocumento) REFERENCES Afiliado_Beneficiario (k_tipodocumento,k_numerodocumento) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Cita ADD CONSTRAINT FK_Cita_Agenda
	FOREIGN KEY (k_agenda,k_medicoTipoDocumento,k_medicoNumeroDocumento) REFERENCES Agenda (k_agenda,k_tipodocumento,k_numerodocumento) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Cita ADD CONSTRAINT FK_Cita_Tipo_de_cita
	FOREIGN KEY (k_tipodecita) REFERENCES Tipo_de_cita (k_tipodecita) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Consultorio ADD CONSTRAINT FK_CONSULTORIO_SEDE
	FOREIGN KEY (k_sede) REFERENCES Sede (k_sede) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Especialidad_Medico_Consultorio ADD CONSTRAINT FK_Especialidad_Medico_Consultorio_Consultorio
	FOREIGN KEY (k_consultorio,k_sede) REFERENCES Consultorio (k_consultorio,k_sede) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Especialidad_Medico_Consultorio ADD CONSTRAINT FK_Especialidad_Medico_Consultorio_Especialidad
	FOREIGN KEY (k_especialidad) REFERENCES Especialidad (k_especialidad) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Especialidad_Medico_Consultorio ADD CONSTRAINT FK_Especialidad_Medico_Consultorio_Medico
	FOREIGN KEY (k_tipodocumento,k_numerodocumento) REFERENCES Medico (k_tipodocumento,k_numerodocumento) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Medico ADD CONSTRAINT FK_Medico_Usuario
	FOREIGN KEY (k_tipodocumento,k_numerodocumento) REFERENCES Usuario (k_tipodocumento,k_numerodocumento) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Pago ADD CONSTRAINT FK_Pago_Cita
	FOREIGN KEY (k_idcita) REFERENCES Cita (k_idcita) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Registro ADD CONSTRAINT FK_Registro_Cita
	FOREIGN KEY (k_idcita) REFERENCES Cita (k_idcita) ON DELETE No Action ON UPDATE No Action
;

/* Create Table Comments, Sequences for Autonumber Columns */

COMMENT ON TABLE Afiliado_Beneficiario
	IS 'Esta tabla contiene la categoría y tipo de afiliación del usuario.'
;

COMMENT ON COLUMN Afiliado_Beneficiario.k_numerodocumento
	IS 'identificador unico para Usuario'
;

COMMENT ON COLUMN Afiliado_Beneficiario.n_tipoafiliacion
	IS 'nombre del tipo de afiliacion del afiliado/beneficiario'
;

COMMENT ON COLUMN Afiliado_Beneficiario.n_estado
	IS 'Estado del beneficiario (Activo, Inactivo, En mora)'
;

COMMENT ON TABLE Agenda
	IS 'Esta tabla guarda los datos de las agendas'
;

COMMENT ON COLUMN Agenda.k_agenda
	IS 'Identificador único para Agenda'
;

COMMENT ON COLUMN Agenda.q_mes
	IS 'Mes en curso de la agenda'
;

COMMENT ON TABLE Categoria
	IS 'Esta tabla representa el manejo de categorias'
;

COMMENT ON COLUMN Categoria.k_categoria
	IS 'Identificador único para Categoría'
;

COMMENT ON COLUMN Categoria.i_nombre
	IS 'Nombre que recibe la Categoría'
;

COMMENT ON COLUMN Categoria.q_precio
	IS 'Precio asignado para la Categoría'
;

COMMENT ON COLUMN Categoria.q_multa
	IS 'Precio a pagar por multa'
;

COMMENT ON TABLE Cita
	IS 'Esta tabla contiene la información de las citas'
;

COMMENT ON COLUMN Cita.k_idcita
	IS 'identificador único para Cita'
;

COMMENT ON COLUMN Cita.h_inicial
	IS 'Hora inicial de la cita'
;

COMMENT ON COLUMN Cita.h_final
	IS 'Hora final (calculada a partir del tipo) de la cita'
;

COMMENT ON COLUMN Cita.f_cita
	IS 'Dia mes y año de la cita'
;

COMMENT ON COLUMN Cita.n_estado
	IS 'Estado de la cita.'
;

COMMENT ON TABLE Consultorio
	IS 'Esta tabla almacena los datos de los consultorios'
;

COMMENT ON COLUMN Consultorio.k_consultorio
	IS 'Identificador único para Consultorio (Es el número de consultorio)'
;

COMMENT ON COLUMN Consultorio.k_sede
	IS 'Identificador unico para Sede'
;

COMMENT ON TABLE Especialidad
	IS 'Esta tabla guarda las especialidades de los médicos.'
;

COMMENT ON COLUMN Especialidad.k_especialidad
	IS 'Identificador único para Especialidad'
;

COMMENT ON COLUMN Especialidad.n_nombre
	IS 'Nombre que recibe la especialidad'
;

COMMENT ON TABLE Especialidad_Medico_Consultorio
	IS 'Esta tabla contiene la PK de Médico y la PK de Especialidad'
;

COMMENT ON COLUMN Especialidad_Medico_Consultorio.k_especialidad
	IS 'Identificador único para Especialidad'
;

COMMENT ON COLUMN Especialidad_Medico_Consultorio.k_numerodocumento
	IS 'Identificador único para Médico'
;

COMMENT ON TABLE Medico
	IS 'Esta tabla almacena el registro médico del médico.'
;

COMMENT ON COLUMN Medico.k_numerodocumento
	IS 'Identificador único para Usuario.'
;

COMMENT ON TABLE Pago
	IS 'En esta tabla se hace el manejo de pagos'
;

COMMENT ON COLUMN Pago.k_idcita
	IS 'Identificador único para Cita'
;

COMMENT ON COLUMN Pago.k_pago
	IS 'Identificador debil para Pago'
;

COMMENT ON COLUMN Pago.n_estado
	IS 'Estado del pago (Cancelado, en mora, etc)'
;

COMMENT ON COLUMN Pago.f_pago
	IS 'Fecha en la que se realizo el pago HH:MM DD/MM/AA'
;

COMMENT ON COLUMN Pago.f_limitepago
	IS 'Fecha máxima permitida para pagar'
;

COMMENT ON TABLE Registro
	IS 'Esta tabla maneja la información '
;

COMMENT ON COLUMN Registro.k_idcita
	IS 'Identificador único para Cita'
;

COMMENT ON COLUMN Registro.k_registro
	IS 'Identificador debil para Registro'
;

COMMENT ON COLUMN Registro.n_diagnostico
	IS 'Se registra acá lo concluido por el médico'
;

COMMENT ON COLUMN Registro.n_prescripción
	IS 'Se le receta medicamentos al paciente'
;

COMMENT ON TABLE Sede
	IS 'En esta tabla se almacenan los datos de la sede.'
;

COMMENT ON COLUMN Sede.k_sede
	IS 'Identificador único para Sede'
;

COMMENT ON COLUMN Sede.n_nombre
	IS 'Nombre de la sede'
;

COMMENT ON COLUMN Sede.q_telefono
	IS 'Teléfono de contacto a la sede'
;

COMMENT ON COLUMN Sede.n_direccion
	IS 'Dirección donde esta ubicada la sede'
;

COMMENT ON TABLE Usuario
	IS 'Esta tabla almacena los datos correspondientes a los medicos y afiliados.'
;

COMMENT ON COLUMN Usuario.k_numerodocumento
	IS 'Identificador único para Usuario'
;

COMMENT ON COLUMN Usuario.n_nombre
	IS 'Nombre del Usuario'
;

COMMENT ON COLUMN Usuario.i_sexo
	IS 'Sexo del usuario'
;

COMMENT ON COLUMN Usuario.f_nacimiento
	IS 'Fecha de nacimiento del Usuario'
;

COMMENT ON COLUMN Usuario.q_telefonocontacto
	IS 'Telefono de contacto de Usuario'
;

COMMENT ON COLUMN Usuario.q_telefonocelular
	IS 'Telefono celular de Usuario'
;

COMMENT ON COLUMN Usuario.n_correoElectronico
	IS 'Correo electrónico de Usuario'
;
